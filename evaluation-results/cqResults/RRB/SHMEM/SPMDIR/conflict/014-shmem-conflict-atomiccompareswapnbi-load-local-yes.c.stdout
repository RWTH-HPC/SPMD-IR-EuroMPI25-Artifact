

--------------------------------------------------------------------------------------------------------------
Static Verification of Data Races:
--------------------------------------------------------------------------------------------------------------

cq-results-20250731-154348/RRB/SHMEM/SPMDIR/conflict/014-shmem-conflict-atomiccompareswapnbi-load-local-yes.c:31:36: warning: load operation/call may access the same memory as the previous operation without proper synch. (Data Race)
        printf("localbuf is %d\n", localbuf);
                                   ^
cq-results-20250731-154348/RRB/SHMEM/SPMDIR/conflict/014-shmem-conflict-atomiccompareswapnbi-load-local-yes.c:31:36: note: see current operation: %23 = llvm.load %7 {alignment = 4 : i64, spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static", tbaa = [#llvm.tbaa_tag<base_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, access_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, offset = 0>]} : !llvm.ptr -> i32


Previous operation:

cq-results-20250731-154348/RRB/SHMEM/SPMDIR/conflict/014-shmem-conflict-atomiccompareswapnbi-load-local-yes.c:29:9: warning: compareAndSwap operation/call
        shmem_int_atomic_compare_swap_nbi(&localbuf, &remote, 42, 1, 1);
        ^
cq-results-20250731-154348/RRB/SHMEM/SPMDIR/conflict/014-shmem-conflict-atomiccompareswapnbi-load-local-yes.c:29:9: note: see current operation: %22 = "spmd.compareAndSwap"(%alloca, %alloca_1, %7, %5, %c1_i32, %win, %c0_i64) <{isAtomic = true, isBlocking = true, usedModel = 1 : i32}> {spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static"} : (memref<1xi32>, memref<1xi32>, !llvm.ptr, !spmd.datatype, i32, !spmd.win, i64) -> !spmd.error


With the alias values:
Causing Access on: %7
Previous Access on: %7


On the orignal value:
Operand: %7


Defined by:
<unknown>:0: warning: alloca
<unknown>:0: note: see current operation: %7 = llvm.alloca %c1_i32 x i32 {alignment = 4 : i64, spmd.executionKind = "All"} : (i32) -> !llvm.ptr

--------------------------------------------------------------------------------------------------------------



