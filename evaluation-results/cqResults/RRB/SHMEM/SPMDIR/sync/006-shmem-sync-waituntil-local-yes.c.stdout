

--------------------------------------------------------------------------------------------------------------
Static Verification of Data Races:
--------------------------------------------------------------------------------------------------------------

cq-results-20250731-154348/RRB/SHMEM/SPMDIR/sync/006-shmem-sync-waituntil-local-yes.c:38:18: warning: store operation/call may access the same memory as the previous operation without proper synch. (Data Race)
        localbuf = 1337;
                 ^
cq-results-20250731-154348/RRB/SHMEM/SPMDIR/sync/006-shmem-sync-waituntil-local-yes.c:38:18: note: see current operation: llvm.store %c1337_i32, %9 {alignment = 4 : i64, spmd.executionKind = "All", tbaa = [#llvm.tbaa_tag<base_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, access_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, offset = 0>]} : i32, !llvm.ptr


Previous operation:

cq-results-20250731-154348/RRB/SHMEM/SPMDIR/sync/006-shmem-sync-waituntil-local-yes.c:34:9: warning: putSignal operation/call
        shmem_int_put_signal_nbi(&remote, &localbuf, 1, &flag, 1, SHMEM_SIGNAL_SET, 1);
        ^
cq-results-20250731-154348/RRB/SHMEM/SPMDIR/sync/006-shmem-sync-waituntil-local-yes.c:34:9: note: see current operation: %error_4 = "spmd.putSignal"(%9, %c1_i64, %7, %c1_i64, %c1_i32, %win, %c0_i64, %c1_i64, %7, %c1_i64, %win_2, %c1_i64, %6) <{isAtomic = true, isBlocking = true, usedModel = 1 : i32}> {spmd.executionKind = "All"} : (!llvm.ptr, i64, !spmd.datatype, i64, i32, !spmd.win, i64, i64, !spmd.datatype, i64, !spmd.win, i64, !spmd.signalOp) -> !spmd.error


With the alias values:
Causing Access on: %9
Previous Access on: %9


On the orignal value:
Operand: %9


Defined by:
<unknown>:0: warning: alloca
<unknown>:0: note: see current operation: %9 = llvm.alloca %c1_i32 x i32 {alignment = 4 : i64, spmd.executionKind = "All"} : (i32) -> !llvm.ptr

--------------------------------------------------------------------------------------------------------------



